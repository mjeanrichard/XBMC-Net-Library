//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Media {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Media.Artwork
    /// </jsonId>
    /// <json>
    /// {
    ///  "additionalProperties": {
    ///    "$ref": "Global.String.NotEmpty",
    ///    "default": ""
    ///  },
    ///  "id": "Media.Artwork",
    ///  "properties": {
    ///    "banner": {
    ///      "$ref": "Global.String.NotEmpty",
    ///      "default": ""
    ///    },
    ///    "fanart": {
    ///      "$ref": "Global.String.NotEmpty",
    ///      "default": ""
    ///    },
    ///    "poster": {
    ///      "$ref": "Global.String.NotEmpty",
    ///      "default": ""
    ///    },
    ///    "thumb": {
    ///      "$ref": "Global.String.NotEmpty",
    ///      "default": ""
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Artwork : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private string _banner = "";
        
        private string _fanArt = "";
        
        private string _poster = "";
        
        private string _thumb = "";
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="banner")]
        public string Banner {
            get {
                return this._banner;
            }
            set {
                this._banner = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="fanart")]
        public string FanArt {
            get {
                return this._fanArt;
            }
            set {
                this._fanArt = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="poster")]
        public string Poster {
            get {
                return this._poster;
            }
            set {
                this._poster = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="thumb")]
        public string Thumb {
            get {
                return this._thumb;
            }
            set {
                this._thumb = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Banner = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "banner", "");
            this.FanArt = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "fanart", "");
            this.Poster = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "poster", "");
            this.Thumb = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "thumb", "");
            this.ParseExtension(json);
        }
    }
}
