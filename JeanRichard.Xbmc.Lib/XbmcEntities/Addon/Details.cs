//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Addon {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Addon.Details
    /// </jsonId>
    /// <json>
    /// {
    ///  "extends": "Item.Details.Base",
    ///  "id": "Addon.Details",
    ///  "properties": {
    ///    "addonid": {
    ///      "required": true,
    ///      "type": "string"
    ///    },
    ///    "author": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "broken": {
    ///      "default": null,
    ///      "type": [
    ///        {
    ///          "type": "boolean"
    ///        },
    ///        {
    ///          "type": "string"
    ///        }
    ///      ]
    ///    },
    ///    "dependencies": {
    ///      "items": {
    ///        "properties": {
    ///          "addonid": {
    ///            "required": true,
    ///            "type": "string"
    ///          },
    ///          "optional": {
    ///            "required": true,
    ///            "type": "boolean"
    ///          },
    ///          "version": {
    ///            "required": true,
    ///            "type": "string"
    ///          }
    ///        },
    ///        "type": "object"
    ///      },
    ///      "type": "array"
    ///    },
    ///    "description": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "disclaimer": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "enabled": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    },
    ///    "extrainfo": {
    ///      "items": {
    ///        "properties": {
    ///          "key": {
    ///            "required": true,
    ///            "type": "string"
    ///          },
    ///          "value": {
    ///            "required": true,
    ///            "type": "string"
    ///          }
    ///        },
    ///        "type": "object"
    ///      },
    ///      "type": "array"
    ///    },
    ///    "fanart": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "name": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "path": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "rating": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    },
    ///    "summary": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "thumbnail": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "type": {
    ///      "$ref": "Addon.Types",
    ///      "required": true
    ///    },
    ///    "version": {
    ///      "default": "",
    ///      "type": "string"
    ///    }
    ///  }
    ///}
    /// </json>
    public partial class Details : JeanRichard.Xbmc.Lib.XbmcEntities.Item.ItemDetailsBase {
        
        private string _addonid;
        
        private string _author = "";
        
        private Array[] _dependencies;
        
        private string _description = "";
        
        private string _disclaimer = "";
        
        private System.Nullable<bool> _enabled = false;
        
        private Array[] _extrainfo;
        
        private string _fanArt = "";
        
        private string _name = "";
        
        private string _path = "";
        
        private System.Nullable<int> _rating = 0;
        
        private string _summary = "";
        
        private string _thumbnail = "";
        
        private Addon.Types _type;
        
        private string _version = "";
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        [Newtonsoft.Json.JsonProperty(PropertyName="addonid")]
        public string Addonid {
            get {
                return this._addonid;
            }
            set {
                this._addonid = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="author")]
        public string Author {
            get {
                return this._author;
            }
            set {
                this._author = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="dependencies")]
        public Array[] Dependencies {
            get {
                return this._dependencies;
            }
            set {
                this._dependencies = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="description")]
        public string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="disclaimer")]
        public string Disclaimer {
            get {
                return this._disclaimer;
            }
            set {
                this._disclaimer = value;
            }
        }
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="enabled")]
        public System.Nullable<bool> Enabled {
            get {
                return this._enabled;
            }
            set {
                this._enabled = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="extrainfo")]
        public Array[] Extrainfo {
            get {
                return this._extrainfo;
            }
            set {
                this._extrainfo = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="fanart")]
        public string FanArt {
            get {
                return this._fanArt;
            }
            set {
                this._fanArt = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="name")]
        public string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="path")]
        public string Path {
            get {
                return this._path;
            }
            set {
                this._path = value;
            }
        }
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="rating")]
        public System.Nullable<int> Rating {
            get {
                return this._rating;
            }
            set {
                this._rating = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="summary")]
        public string Summary {
            get {
                return this._summary;
            }
            set {
                this._summary = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="thumbnail")]
        public string Thumbnail {
            get {
                return this._thumbnail;
            }
            set {
                this._thumbnail = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="type")]
        public Addon.Types Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="version")]
        public string Version {
            get {
                return this._version;
            }
            set {
                this._version = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Addonid = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "addonid");
            this.Author = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "author", "");
            this.Dependencies = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseJsonObjectArray<Array>(json, "dependencies");
            this.Description = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "description", "");
            this.Disclaimer = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "disclaimer", "");
            this.Enabled = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "enabled", false);
            this.Extrainfo = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseJsonObjectArray<Array>(json, "extrainfo");
            this.FanArt = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "fanart", "");
            this.Name = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "name", "");
            this.Path = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "path", "");
            this.Rating = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "rating", 0);
            this.Summary = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "summary", "");
            this.Thumbnail = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "thumbnail", "");
            this.Type = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseEnum<Addon.Types>(json, "type", Addon.Types.Unknown);
            this.Version = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "version", "");
            this.ParseExtension(json);
        }
    }
}
