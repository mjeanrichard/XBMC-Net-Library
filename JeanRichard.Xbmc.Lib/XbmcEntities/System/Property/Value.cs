//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.System.Property {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// System.Property.Value
    /// </jsonId>
    /// <json>
    /// {
    ///  "id": "System.Property.Value",
    ///  "properties": {
    ///    "canhibernate": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    },
    ///    "canreboot": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    },
    ///    "canshutdown": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    },
    ///    "cansuspend": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Value : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private System.Nullable<bool> _canHibernate = false;
        
        private System.Nullable<bool> _canReboot = false;
        
        private System.Nullable<bool> _canShutdown = false;
        
        private System.Nullable<bool> _canSuspend = false;
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="canhibernate")]
        public System.Nullable<bool> CanHibernate {
            get {
                return this._canHibernate;
            }
            set {
                this._canHibernate = value;
            }
        }
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="canreboot")]
        public System.Nullable<bool> CanReboot {
            get {
                return this._canReboot;
            }
            set {
                this._canReboot = value;
            }
        }
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="canshutdown")]
        public System.Nullable<bool> CanShutdown {
            get {
                return this._canShutdown;
            }
            set {
                this._canShutdown = value;
            }
        }
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="cansuspend")]
        public System.Nullable<bool> CanSuspend {
            get {
                return this._canSuspend;
            }
            set {
                this._canSuspend = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.CanHibernate = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "canhibernate", false);
            this.CanReboot = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "canreboot", false);
            this.CanShutdown = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "canshutdown", false);
            this.CanSuspend = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "cansuspend", false);
            this.ParseExtension(json);
        }
    }
}
