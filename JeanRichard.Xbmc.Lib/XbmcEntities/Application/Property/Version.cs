//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Application.Property {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Application.Property.version
    /// </jsonId>
    /// <json>
    /// {
    ///  "properties": {
    ///    "major": {
    ///      "minimum": 0,
    ///      "required": true,
    ///      "type": "integer"
    ///    },
    ///    "minor": {
    ///      "minimum": 0,
    ///      "required": true,
    ///      "type": "integer"
    ///    },
    ///    "revision": {
    ///      "default": null,
    ///      "type": [
    ///        {
    ///          "type": "string"
    ///        },
    ///        {
    ///          "type": "integer"
    ///        }
    ///      ]
    ///    },
    ///    "tag": {
    ///      "enums": [
    ///        "prealpha",
    ///        "alpha",
    ///        "beta",
    ///        "releasecandidate",
    ///        "stable"
    ///      ],
    ///      "required": true,
    ///      "type": "string"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Version : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private int _major;
        
        private int _minor;
        
        private Application.Property.Tag _tag;
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Minimum: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="major")]
        public int Major {
            get {
                return this._major;
            }
            set {
                this._major = value;
            }
        }
        
        /// <remarks>Minimum: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="minor")]
        public int Minor {
            get {
                return this._minor;
            }
            set {
                this._minor = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="tag")]
        public Application.Property.Tag Tag {
            get {
                return this._tag;
            }
            set {
                this._tag = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Major = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<int>(json, "major");
            this.Minor = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<int>(json, "minor");
            this.Tag = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseEnum<Application.Property.Tag>(json, "tag");
            this.ParseExtension(json);
        }
    }
}
