//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.List {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// List.Sort
    /// </jsonId>
    /// <json>
    /// {
    ///  "id": "List.Sort",
    ///  "properties": {
    ///    "ignorearticle": {
    ///      "default": false,
    ///      "type": "boolean"
    ///    },
    ///    "method": {
    ///      "default": "none",
    ///      "enums": [
    ///        "none",
    ///        "label",
    ///        "date",
    ///        "size",
    ///        "file",
    ///        "drivetype",
    ///        "track",
    ///        "duration",
    ///        "title",
    ///        "artist",
    ///        "album",
    ///        "genre",
    ///        "year",
    ///        "videorating",
    ///        "programcount",
    ///        "playlist",
    ///        "episode",
    ///        "videotitle",
    ///        "sorttitle",
    ///        "productioncode",
    ///        "songrating",
    ///        "mpaarating",
    ///        "videoruntime",
    ///        "studio",
    ///        "fullpath",
    ///        "lastplayed",
    ///        "unsorted"
    ///      ],
    ///      "type": "string"
    ///    },
    ///    "order": {
    ///      "default": "ascending",
    ///      "enums": [
    ///        "ascending",
    ///        "descending"
    ///      ],
    ///      "type": "string"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Sort : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private System.Nullable<bool> _ignoreArticle = false;
        
        private List.SortMethods _method;
        
        private List.Orders _order;
        
        /// <remarks>Default: 'False'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="ignorearticle")]
        public System.Nullable<bool> IgnoreArticle {
            get {
                return this._ignoreArticle;
            }
            set {
                this._ignoreArticle = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="method")]
        public List.SortMethods Method {
            get {
                return this._method;
            }
            set {
                this._method = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="order")]
        public List.Orders Order {
            get {
                return this._order;
            }
            set {
                this._order = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.IgnoreArticle = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<bool>>(json, "ignorearticle", false);
            this.Method = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseEnum<List.SortMethods>(json, "method", List.SortMethods.None);
            this.Order = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseEnum<List.Orders>(json, "order", List.Orders.Ascending);
        }
    }
}
