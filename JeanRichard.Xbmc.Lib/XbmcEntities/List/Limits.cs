//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.List {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// List.Limits
    /// </jsonId>
    /// <json>
    /// {
    ///  "additionalProperties": false,
    ///  "id": "List.Limits",
    ///  "properties": {
    ///    "end": {
    ///      "default": -1,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    },
    ///    "start": {
    ///      "default": 0,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Limits : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private System.Nullable<int> _end = -1;
        
        private System.Nullable<int> _start = 0;
        
        /// <remarks>Minimum: '0'  Default: '-1'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="end")]
        public System.Nullable<int> End {
            get {
                return this._end;
            }
            set {
                this._end = value;
            }
        }
        
        /// <remarks>Minimum: '0'  Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="start")]
        public System.Nullable<int> Start {
            get {
                return this._start;
            }
            set {
                this._start = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.End = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "end", -1);
            this.Start = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "start", 0);
        }
    }
}
