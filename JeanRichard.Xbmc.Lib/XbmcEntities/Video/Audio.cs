//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Video {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Video.audio
    /// </jsonId>
    /// <json>
    /// {
    ///  "additionalProperties": false,
    ///  "properties": {
    ///    "channels": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    },
    ///    "codec": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "language": {
    ///      "default": "",
    ///      "type": "string"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Audio : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private System.Nullable<int> _channels = 0;
        
        private string _codec = "";
        
        private string _language = "";
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="channels")]
        public System.Nullable<int> Channels {
            get {
                return this._channels;
            }
            set {
                this._channels = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="codec")]
        public string Codec {
            get {
                return this._codec;
            }
            set {
                this._codec = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="language")]
        public string Language {
            get {
                return this._language;
            }
            set {
                this._language = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Channels = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "channels", 0);
            this.Codec = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "codec", "");
            this.Language = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "language", "");
            this.ParseExtension(json);
        }
    }
}
