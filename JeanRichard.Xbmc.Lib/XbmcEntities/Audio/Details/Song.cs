//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Audio.Details {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Audio.Details.Song
    /// </jsonId>
    /// <json>
    /// {
    ///  "extends": "Audio.Details.Media",
    ///  "id": "Audio.Details.Song",
    ///  "properties": {
    ///    "album": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "albumartist": {
    ///      "$ref": "Array.String"
    ///    },
    ///    "albumartistid": {
    ///      "$ref": "Array.Integer"
    ///    },
    ///    "albumid": {
    ///      "$ref": "Library.Id",
    ///      "default": -1
    ///    },
    ///    "comment": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "disc": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    },
    ///    "duration": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    },
    ///    "file": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "lastplayed": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "lyrics": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "musicbrainzartistid": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "musicbrainztrackid": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "playcount": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    },
    ///    "songid": {
    ///      "$ref": "Library.Id",
    ///      "required": true
    ///    },
    ///    "track": {
    ///      "default": 0,
    ///      "type": "integer"
    ///    }
    ///  }
    ///}
    /// </json>
    public partial class Song : JeanRichard.Xbmc.Lib.XbmcEntities.Audio.Details.Media {
        
        private string _album = "";
        
        private string[] _albumArtist;
        
        private System.Nullable<int>[] _albumArtistId;
        
        private System.Nullable<int> _albumId = -1;
        
        private string _comment = "";
        
        private System.Nullable<int> _disc = 0;
        
        private System.Nullable<int> _duration = 0;
        
        private string _file = "";
        
        private string _lastPlayed = "";
        
        private string _lyrics = "";
        
        private string _musicBrainzArtistId = "";
        
        private string _musicBrainzTrackId = "";
        
        private System.Nullable<int> _playCount = 0;
        
        private System.Nullable<int> _songId = -1;
        
        private System.Nullable<int> _track = 0;
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="album")]
        public string Album {
            get {
                return this._album;
            }
            set {
                this._album = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="albumartist")]
        public string[] AlbumArtist {
            get {
                return this._albumArtist;
            }
            set {
                this._albumArtist = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="albumartistid")]
        public System.Nullable<int>[] AlbumArtistId {
            get {
                return this._albumArtistId;
            }
            set {
                this._albumArtistId = value;
            }
        }
        
        /// <remarks>Minimum: '1'  Default: '-1'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="albumid")]
        public System.Nullable<int> AlbumId {
            get {
                return this._albumId;
            }
            set {
                this._albumId = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="comment")]
        public string Comment {
            get {
                return this._comment;
            }
            set {
                this._comment = value;
            }
        }
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="disc")]
        public System.Nullable<int> Disc {
            get {
                return this._disc;
            }
            set {
                this._disc = value;
            }
        }
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="duration")]
        public System.Nullable<int> Duration {
            get {
                return this._duration;
            }
            set {
                this._duration = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="file")]
        public string File {
            get {
                return this._file;
            }
            set {
                this._file = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="lastplayed")]
        public string LastPlayed {
            get {
                return this._lastPlayed;
            }
            set {
                this._lastPlayed = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="lyrics")]
        public string Lyrics {
            get {
                return this._lyrics;
            }
            set {
                this._lyrics = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="musicbrainzartistid")]
        public string MusicBrainzArtistId {
            get {
                return this._musicBrainzArtistId;
            }
            set {
                this._musicBrainzArtistId = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="musicbrainztrackid")]
        public string MusicBrainzTrackId {
            get {
                return this._musicBrainzTrackId;
            }
            set {
                this._musicBrainzTrackId = value;
            }
        }
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="playcount")]
        public System.Nullable<int> PlayCount {
            get {
                return this._playCount;
            }
            set {
                this._playCount = value;
            }
        }
        
        /// <remarks>Minimum: '1'  Default: '-1'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="songid")]
        public System.Nullable<int> SongId {
            get {
                return this._songId;
            }
            set {
                this._songId = value;
            }
        }
        
        /// <remarks>Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="track")]
        public System.Nullable<int> Track {
            get {
                return this._track;
            }
            set {
                this._track = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Album = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "album", "");
            this.AlbumArtist = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<string>(json, "albumartist");
            this.AlbumArtistId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<System.Nullable<int>>(json, "albumartistid");
            this.AlbumId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "albumid", -1);
            this.Comment = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "comment", "");
            this.Disc = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "disc", 0);
            this.Duration = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "duration", 0);
            this.File = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "file", "");
            this.LastPlayed = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "lastplayed", "");
            this.Lyrics = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "lyrics", "");
            this.MusicBrainzArtistId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "musicbrainzartistid", "");
            this.MusicBrainzTrackId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "musicbrainztrackid", "");
            this.PlayCount = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "playcount", 0);
            this.SongId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "songid", -1);
            this.Track = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "track", 0);
            this.ParseExtension(json);
        }
    }
}
