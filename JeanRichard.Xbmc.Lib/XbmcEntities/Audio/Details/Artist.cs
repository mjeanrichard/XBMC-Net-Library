//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Audio.Details {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Audio.Details.Artist
    /// </jsonId>
    /// <json>
    /// {
    ///  "extends": "Audio.Details.Base",
    ///  "id": "Audio.Details.Artist",
    ///  "properties": {
    ///    "artist": {
    ///      "required": true,
    ///      "type": "string"
    ///    },
    ///    "artistid": {
    ///      "$ref": "Library.Id",
    ///      "required": true
    ///    },
    ///    "born": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "description": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "died": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "disbanded": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "formed": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "instrument": {
    ///      "$ref": "Array.String"
    ///    },
    ///    "mood": {
    ///      "$ref": "Array.String"
    ///    },
    ///    "musicbrainzartistid": {
    ///      "default": "",
    ///      "type": "string"
    ///    },
    ///    "style": {
    ///      "$ref": "Array.String"
    ///    },
    ///    "yearsactive": {
    ///      "$ref": "Array.String"
    ///    }
    ///  }
    ///}
    /// </json>
    public partial class Artist : JeanRichard.Xbmc.Lib.XbmcEntities.Audio.Details.AudioDetailsBase {
        
        private string _artistName;
        
        private System.Nullable<int> _artistId = -1;
        
        private string _born = "";
        
        private string _description = "";
        
        private string _died = "";
        
        private string _disbanded = "";
        
        private string _formed = "";
        
        private string[] _instrument;
        
        private string[] _mood;
        
        private string _musicBrainzArtistId = "";
        
        private string[] _style;
        
        private string[] _yearsactive;
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        [Newtonsoft.Json.JsonProperty(PropertyName="artist")]
        public string ArtistName {
            get {
                return this._artistName;
            }
            set {
                this._artistName = value;
            }
        }
        
        /// <remarks>Minimum: '1'  Default: '-1'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="artistid")]
        public System.Nullable<int> ArtistId {
            get {
                return this._artistId;
            }
            set {
                this._artistId = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="born")]
        public string Born {
            get {
                return this._born;
            }
            set {
                this._born = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="description")]
        public string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="died")]
        public string Died {
            get {
                return this._died;
            }
            set {
                this._died = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="disbanded")]
        public string Disbanded {
            get {
                return this._disbanded;
            }
            set {
                this._disbanded = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="formed")]
        public string Formed {
            get {
                return this._formed;
            }
            set {
                this._formed = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="instrument")]
        public string[] Instrument {
            get {
                return this._instrument;
            }
            set {
                this._instrument = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="mood")]
        public string[] Mood {
            get {
                return this._mood;
            }
            set {
                this._mood = value;
            }
        }
        
        /// <remarks>Default: ''</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="musicbrainzartistid")]
        public string MusicBrainzArtistId {
            get {
                return this._musicBrainzArtistId;
            }
            set {
                this._musicBrainzArtistId = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="style")]
        public string[] Style {
            get {
                return this._style;
            }
            set {
                this._style = value;
            }
        }
        
        [Newtonsoft.Json.JsonProperty(PropertyName="yearsactive")]
        public string[] Yearsactive {
            get {
                return this._yearsactive;
            }
            set {
                this._yearsactive = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.ArtistName = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "artist");
            this.ArtistId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "artistid", -1);
            this.Born = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "born", "");
            this.Description = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "description", "");
            this.Died = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "died", "");
            this.Disbanded = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "disbanded", "");
            this.Formed = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "formed", "");
            this.Instrument = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<string>(json, "instrument");
            this.Mood = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<string>(json, "mood");
            this.MusicBrainzArtistId = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<string>(json, "musicbrainzartistid", "");
            this.Style = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<string>(json, "style");
            this.Yearsactive = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleArrayValue<string>(json, "yearsactive");
            this.ParseExtension(json);
        }
    }
}
