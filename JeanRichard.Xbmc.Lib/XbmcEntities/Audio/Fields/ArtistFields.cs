//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Audio.Fields {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Audio.Fields.Artist
    /// </jsonId>
    /// <json>
    /// {
    ///  "extends": "Item.Fields.Base",
    ///  "id": "Audio.Fields.Artist",
    ///  "items": {
    ///    "enums": [
    ///      "instrument",
    ///      "style",
    ///      "mood",
    ///      "born",
    ///      "formed",
    ///      "description",
    ///      "genre",
    ///      "died",
    ///      "disbanded",
    ///      "yearsactive",
    ///      "musicbrainzartistid",
    ///      "fanart",
    ///      "thumbnail"
    ///    ],
    ///    "type": "string"
    ///  }
    ///}
    /// </json>
    public class ArtistFields : JeanRichard.Xbmc.Lib.JsonRpc.FlagsBase<ArtistFields> {
        
        public static ArtistFields None = new ArtistFields();
        
        public static ArtistFields Instrument = new ArtistFields("instrument");
        
        public static ArtistFields Style = new ArtistFields("style");
        
        public static ArtistFields Mood = new ArtistFields("mood");
        
        public static ArtistFields Born = new ArtistFields("born");
        
        public static ArtistFields Formed = new ArtistFields("formed");
        
        public static ArtistFields Description = new ArtistFields("description");
        
        public static ArtistFields Genre = new ArtistFields("genre");
        
        public static ArtistFields Died = new ArtistFields("died");
        
        public static ArtistFields Disbanded = new ArtistFields("disbanded");
        
        public static ArtistFields Yearsactive = new ArtistFields("yearsactive");
        
        public static ArtistFields MusicBrainzArtistId = new ArtistFields("musicbrainzartistid");
        
        public static ArtistFields FanArt = new ArtistFields("fanart");
        
        public static ArtistFields Thumbnail = new ArtistFields("thumbnail");
        
        public static ArtistFields All = ArtistFields.Combine(ArtistFields.Instrument, ArtistFields.Style, ArtistFields.Mood, ArtistFields.Born, ArtistFields.Formed, ArtistFields.Description, ArtistFields.Genre, ArtistFields.Died, ArtistFields.Disbanded, ArtistFields.Yearsactive, ArtistFields.MusicBrainzArtistId, ArtistFields.FanArt, ArtistFields.Thumbnail);
        

        protected ArtistFields(string value) : base(value)
        {}

        public ArtistFields()
        {}
        
    }
}
