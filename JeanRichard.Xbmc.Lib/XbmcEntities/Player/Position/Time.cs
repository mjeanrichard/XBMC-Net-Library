//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeanRichard.Xbmc.Lib.XbmcEntities.Player.Position {
    using System;
    using System.Runtime.Serialization;
    
    
    /// <jsonId>
    /// Player.Position.Time
    /// </jsonId>
    /// <json>
    /// {
    ///  "additionalProperties": false,
    ///  "id": "Player.Position.Time",
    ///  "properties": {
    ///    "hours": {
    ///      "default": 0,
    ///      "maximum": 23,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    },
    ///    "milliseconds": {
    ///      "default": 0,
    ///      "maximum": 999,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    },
    ///    "minutes": {
    ///      "default": 0,
    ///      "maximum": 59,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    },
    ///    "seconds": {
    ///      "default": 0,
    ///      "maximum": 59,
    ///      "minimum": 0,
    ///      "type": "integer"
    ///    }
    ///  },
    ///  "type": "object"
    ///}
    /// </json>
    public partial class Time : JeanRichard.Xbmc.Lib.JsonRpc.JsonRpcItem {
        
        private System.Nullable<int> _hours = 0;
        
        private System.Nullable<int> _milliseconds = 0;
        
        private System.Nullable<int> _minutes = 0;
        
        private System.Nullable<int> _seconds = 0;
        
partial void ParseExtension(Newtonsoft.Json.Linq.JToken json);
        
        /// <remarks>Minimum: '0'  Maximum: '0'  Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="hours")]
        public System.Nullable<int> Hours {
            get {
                return this._hours;
            }
            set {
                this._hours = value;
            }
        }
        
        /// <remarks>Minimum: '0'  Maximum: '0'  Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="milliseconds")]
        public System.Nullable<int> Milliseconds {
            get {
                return this._milliseconds;
            }
            set {
                this._milliseconds = value;
            }
        }
        
        /// <remarks>Minimum: '0'  Maximum: '0'  Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="minutes")]
        public System.Nullable<int> Minutes {
            get {
                return this._minutes;
            }
            set {
                this._minutes = value;
            }
        }
        
        /// <remarks>Minimum: '0'  Maximum: '0'  Default: '0'</remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName="seconds")]
        public System.Nullable<int> Seconds {
            get {
                return this._seconds;
            }
            set {
                this._seconds = value;
            }
        }
        
        protected override void Parse(Newtonsoft.Json.Linq.JToken json) {
            base.Parse(json);
            this.Hours = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "hours", 0);
            this.Milliseconds = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "milliseconds", 0);
            this.Minutes = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "minutes", 0);
            this.Seconds = JeanRichard.Xbmc.Lib.JsonHelpers.JObjectExtensions.ParseSimpleValue<System.Nullable<int>>(json, "seconds", 0);
            this.ParseExtension(json);
        }
    }
}
